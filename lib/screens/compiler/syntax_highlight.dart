import 'dart:ui';

import 'package:flutter/material.dart';

 const theme = {
    "void": TextStyle(fontWeight: FontWeight.bold, color: Color(0xFFEF9A9A)),
    "print":  TextStyle(fontWeight: FontWeight.bold, color: Color(0xFFFFF9C4)),
    "cout":  TextStyle(fontWeight: FontWeight.bold, color: Color(0xFFFFF9C4)),
    "cin":  TextStyle(fontWeight: FontWeight.bold, color: Color(0xFFFFF9C4)),
    "int": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "char": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "abstract": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "assert": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "boolean": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "break": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "byte": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "case": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "catch": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "class": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "continue": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "default": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "do": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "new": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "double": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "else": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "if": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "enum": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "extends": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "final": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "finally": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "float": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "for": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "interface": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "long": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "native": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "package": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "private": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "protected": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "public": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "return": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "short": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "static": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "super": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "switch": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "this": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "throw": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "try": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "while": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "and": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "asm": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "auto": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "bitor": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "delete": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "explicit": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "export": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "false": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "goto": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "namespace": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "not": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "nullptr": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "or": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "operator": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "sizeof": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
    "unsigned": TextStyle(fontWeight:FontWeight.bold,color:Color(0xFF2c7ad6)),
  };

